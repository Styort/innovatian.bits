

BITS information: 

Background Intelligent Transfer Service
http://msdn.microsoft.com/en-us/library/bb968799(VS.85).aspx

This interop code was created by using the midl compiler on the 2003 Server R2 Platform SDK Bits.midl file for x86 and x64.
Once the midl compilation was complete, tlbimp was used to generate assemblies for x86 and x64.
The IL was diffed and then C# code was created from the IL and adjusted for x86 and x64 differences.
Documentation from the interfaces was pulled from MSDN where I felt it was applicable.

c:\>mkdir bits
c:\>cd bits
c:\bits>mkdir 1.0
c:\bits>mkdir 1.0\x86
c:\bits>mkdir 1.0\x64
c:\bits>mkdir 1.5
c:\bits>mkdir 1.5\x86
c:\bits>mkdir 1.5\x64
c:\bits>mkdir 2.0
c:\bits>mkdir 2.0\x86
c:\bits>mkdir 2.0\x64
c:\bits>mkdir 2.5
c:\bits>mkdir 2.5\x86
c:\bits>mkdir 2.5\x64
c:\bits>mkdir 3.0
c:\bits>mkdir 3.0\x86
c:\bits>mkdir 3.0\x64
c:\bits>mkdir cfg
c:\bits>mkdir cfg\x86
c:\bits>mkdir cfg\x64

c:\bits\1.0\x86>midl "C:\Program Files\Microsoft SDKs\Windows\v6.0A\Include\Bits.idl" /win32
c:\bits\1.0\x86>tlbimp Bits.tlb /machine:X86

c:\bits\1.0\x64>midl "C:\Program Files\Microsoft SDKs\Windows\v6.0A\Include\Bits.idl" /x64
c:\bits\1.0\x64>tlbimp Bits.tlb /machine:X64

c:\bits\1.5\x86>midl "C:\Program Files\Microsoft SDKs\Windows\v6.0A\Include\bits1_5.idl" /win32
c:\bits\1.5\x86>tlbimp bits1_5.tlb /machine:X86

c:\bits\1.5\x64>midl "C:\Program Files\Microsoft SDKs\Windows\v6.0A\Include\bits1_5.idl" /x64
c:\bits\1.5\x64>tlbimp bits1_5.tlb /machine:X64

c:\bits\2.0\x86>midl "C:\Program Files\Microsoft SDKs\Windows\v6.0A\Include\bits2_0.idl" /win32
c:\bits\2.0\x86>tlbimp bits2_0.tlb /machine:X86

c:\bits\2.0\x64>midl "C:\Program Files\Microsoft SDKs\Windows\v6.0A\Include\bits2_0.idl" /x64
c:\bits\2.0\x64>tlbimp bits2_0.tlb /machine:X64

c:\bits\2.5\x86>midl "C:\Program Files\Microsoft SDKs\Windows\v6.0A\Include\bits2_5.idl" /win32
c:\bits\2.5\x86>tlbimp bits2_5.tlb /machine:X86

c:\bits\2.5\x64>midl "C:\Program Files\Microsoft SDKs\Windows\v6.0A\Include\bits2_5.idl" /x64
c:\bits\2.5\x64>tlbimp bits2_5.tlb /machine:X64

c:\bits\3.0\x86>midl "C:\Program Files\Microsoft SDKs\Windows\v6.0A\Include\bits3_0.idl" /win32
c:\bits\3.0\x86>tlbimp bits3_0.tlb /machine:X86

c:\bits\3.0\x64>midl "C:\Program Files\Microsoft SDKs\Windows\v6.0A\Include\bits3_0.idl" /x64
c:\bits\3.0\x64>tlbimp bits3_0.tlb /machine:X64

c:\bits\cfg\x86>midl "C:\Program Files\Microsoft SDKs\Windows\v6.0A\Include\bitscfg.idl" /win32
c:\bits\cfg\x86>tlbimp bitscfg.tlb /machine:X86

c:\bits\cfg\x64>midl "C:\Program Files\Microsoft SDKs\Windows\v6.0A\Include\bitscfg.idl" /x64
c:\bits\cfg\x64>tlbimp bitscfg.tlb /machine:X64

Once all files are generated, I grouped them into folders
	tlbimp_output
	midl_output

And I created a source folder in each x86 and x64 folder giving the following tree:

C:\>dir bits /s /o /b /ad
C:\bits>
C:\bits\1.0
C:\bits\1.5
C:\bits\2.0
C:\bits\2.5
C:\bits\3.0
C:\bits\cfg
C:\bits\1.0\x64
C:\bits\1.0\x86
C:\bits\1.0\x64\midl_output
C:\bits\1.0\x64\source
C:\bits\1.0\x64\tlbimp_output
C:\bits\1.0\x64\source\BackgroundCopyManager
C:\bits\1.0\x86\midl_output
C:\bits\1.0\x86\source
C:\bits\1.0\x86\tlbimp_output
C:\bits\1.0\x86\source\BackgroundCopyManager
C:\bits\1.5\x64
C:\bits\1.5\x86
C:\bits\1.5\x64\midl_output
C:\bits\1.5\x64\source
C:\bits\1.5\x64\tlbimp_output
C:\bits\1.5\x64\source\BackgroundCopyManager1_5
C:\bits\1.5\x86\midl_output
C:\bits\1.5\x86\source
C:\bits\1.5\x86\tlbimp_output
C:\bits\1.5\x86\source\BackgroundCopyManager1_5
C:\bits\2.0\x64
C:\bits\2.0\x86
C:\bits\2.0\x64\midl_output
C:\bits\2.0\x64\source
C:\bits\2.0\x64\tlbimp_output
C:\bits\2.0\x64\source\BackgroundCopyManager2_0
C:\bits\2.0\x86\midl_output
C:\bits\2.0\x86\source
C:\bits\2.0\x86\tlbimp_output
C:\bits\2.0\x86\source\BackgroundCopyManager2_0
C:\bits\2.5\x64
C:\bits\2.5\x86
C:\bits\2.5\x64\midl_output
C:\bits\2.5\x64\source
C:\bits\2.5\x64\tlbimp_output
C:\bits\2.5\x64\source\BackgroundCopyManager2_5
C:\bits\2.5\x86\midl_output
C:\bits\2.5\x86\source
C:\bits\2.5\x86\tlbimp_output
C:\bits\2.5\x86\source\BackgroundCopyManager2_5
C:\bits\3.0\x64
C:\bits\3.0\x86
C:\bits\3.0\x64\midl_output
C:\bits\3.0\x64\source
C:\bits\3.0\x64\tlbimp_output
C:\bits\3.0\x64\source\BackgroundCopyManager3_0
C:\bits\3.0\x86\midl_output
C:\bits\3.0\x86\source
C:\bits\3.0\x86\tlbimp_output
C:\bits\3.0\x86\source\BackgroundCopyManager3_0
C:\bits\cfg\x64
C:\bits\cfg\x86
C:\bits\cfg\x64\midl_output
C:\bits\cfg\x64\source
C:\bits\cfg\x64\tlbimp_output
C:\bits\cfg\x64\source\BITSExtensionSetup
C:\bits\cfg\x86\midl_output
C:\bits\cfg\x86\source
C:\bits\cfg\x86\tlbimp_output
C:\bits\cfg\x86\source\BITSExtensionSetup


Using reflector, I added the DLL generated by tlbimp and exported the code to the appropriate source folder.
Now I had separate x86 and x64 source. Using Winmerge, I coud use the directory compare functionality to see
where I would need to adjust the code for x86/x64 implementations when creating my structures/classes.

I now have a lot of classes that look like this which need to be turned into useful type names based on documentation:
	__MIDL_IBackgroundCopyError_0001.cs
	__MIDL_IBackgroundCopyJob2_0001.cs
	__MIDL_IBackgroundCopyJob2_0002.cs
	__MIDL_IBackgroundCopyJob2_0003.cs
	__MIDL_IBackgroundCopyJob2_0004.cs
	__MIDL_IBackgroundCopyJob2_0005.cs
	__MIDL_IBackgroundCopyJob_0001.cs
	__MIDL_IBackgroundCopyJob_0002.cs
	__MIDL_IBackgroundCopyJob_0003.cs
	__MIDL_IBackgroundCopyJob_0004.cs
	__MIDL___MIDL_itf_bits3_0_0004_0001_0001.cs

and _FILETIME.cs and GUID.cs structures that need to be changed to the managed types.




Great COM resource:
http://msdn.microsoft.com/en-us/library/aa645736(VS.71).aspx